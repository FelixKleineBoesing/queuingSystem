version: '2'


services:

  capplan_frontend_api:
    build:
      context: ./
      dockerfile: ./dockerfiles/api.Dockerfile
    image: capplan_frontend_api
    container_name: capplan_frontend_api
    restart: on-failure
    ports:
      - 127.0.0.1:5000:5000
    environment:
    - APP_HOST=0.0.0.0
    - APP_PORT=5000
    - POSTGRES_HOST=capplan_postgres
    - POSTGRES_PORT=5432
    - POSTGRES_DB=capplan
    - POSTGRES_USER=?
    - REDIS_HOST=capplan_redis
    - REDIS_PORT=6379
    - REDIS_DB=0
    - MONGO_HOST=capplan_mongo
    - MONGO_PORT=27017
    - MONGO_USER=?
    - MONGO_PASSWORD=?
    - MAIN_API_QUEUE=consumer_api_queue
    - MAIN_API_QUEUE_CRITICAL=consumer_api_queue_critical
    - NUMBER_THREADS_API=16
    networks:
    - python_db_network
    command: python3 -m src.api.api

  capplan_postgres:
    build:
      context: ./
      dockerfile: ./dockerfiles/postgres.Dockerfile
    image: capplan_postgres
    container_name: capplan_postgres
    restart: on-failure
    ports:
      - 127.0.0.1:5432:5432

  capplan_mlflow:
    build:
      context: ./
      dockerfile: ./dockerfiles/mlflow.Dockerfile
    image: capplan_mlflow
    container_name: capplan_mlflow
    restart: on-failure
    volumes:
      - ./data/mlflow/fileStore:/opt/mlflow/fileStore
      - ./data/mlflow/artifactStore:/opt/mlflow/artifactStore
    ports:
      - 127.0.0.1:5001:5001
      - 127.0.0.1:4040:4040

#  capplan_worker:
#    build:
#      context: ./
#      dockerfile: ./dockerfiles/worker.Dockerfile
#    image: capplan_worker
#    restart: on-failure
#    environment:
#    - FLASK_HOST=capplan_frontend_api
#    - FLASK_PORT=5000
#    - POSTGRES_HOST=capplan_postgres
#    - POSTGRES_PORT=5432
#    - POSTGRES_DB=capplan
#    - POSTGRES_USER=?
#    - POSTGRES_PW=?
#    - REDIS_HOST=capplan_redis
#    - REDIS_PORT=6379
#    - REDIS_DB=0
#    - MONGO_HOST=capplan_mongo
#    - MONGO_PORT=27017
#    - MONGO_USER=?
#    - MONGO_PASSWORD=?
#    - MAIN_API_QUEUE=consumer_api_queue
#    - MAIN_API_QUEUE_CRITICAL=consumer_api_queue_critical
#    - NUMBER_PROCESSES_WORKER=4
#    networks:
#      - python_db_network
#    command: python3 -m src.worker
#
#  capplan_worker_critical:
#    build:
#      context: ./
#      dockerfile: ./dockerfiles/worker.Dockerfile
#    image: capplan_worker
#    restart: on-failure
#    environment:
#    - FLASK_HOST=capplan_frontend_api
#    - FLASK_PORT=5000
#    - POSTGRES_HOST=capplan_postgres
#    - POSTGRES_PORT=5432
#    - POSTGRES_DB=capplan
#    - POSTGRES_USER=?
#    - POSTGRES_PW=?
#    - REDIS_HOST=capplan_redis
#    - REDIS_PORT=6379
#    - REDIS_DB=0
#    - MONGO_HOST=capplan_mongo
#    - MONGO_PORT=27017
#    - MONGO_USER=?
#    - MONGO_PASSWORD=?
#    - MAIN_API_QUEUE=consumer_api_queue
#    - MAIN_API_QUEUE_CRITICAL=consumer_api_queue_critical
#    - NUMBER_PROCESSES_WORKER=4
#    networks:
#      - python_db_network
#    command: python3 -m src.worker

#  capplan_redis:
#    image: redis:5
#    container_name: capplan_redis
#    ports:
#    - 127.0.0.1:6379:6379
#    networks:
#    - python_db_network

networks:
  python_db_network: