version: '2'


services:

  capplan_frontend_api:
    build:
      context: ./
      dockerfile: ./dockerfiles/dockerfile.api
    image: capplan_frontend_api
    container_name: capplan_frontend_api
    restart: on-failure
    ports:
      - 127.0.0.1:5000:5000
    environment:
    - APP_HOST=0.0.0.0
    - APP_PORT=5000
    - POSTGRES_HOST=capplan_postgres
    - POSTGRES_PORT=5432
    - POSTGRES_DB=dotalab
    - POSTGRES_USER=?
    - POSTGRES_PW=?
    - REDIS_HOST=capplan_redis
    - REDIS_PORT=6379
    - REDIS_DB=0
    - MONGO_HOST=capplan_mongo
    - MONGO_PORT=27017
    - MONGO_USER=?
    - MONGO_PASSWORD=?
    - OPENDOTA_API_BASE_URL=https://api.opendota.com/api/
    - FRONTEND_API_QUEUE=consumer_api_queue
    networks:
    - python_db_network

  capplan_worker:
    build:
      context: ./
      dockerfile: ./dockerfiles/dockerfile.worker
    restart: on-failure
    environment:
    - FLASK_HOST=capplan_frontend_api
    - FLASK_PORT=5000
    - POSTGRES_HOST=capplan_postgres
    - POSTGRES_PORT=5432
    - POSTGRES_DB=capplan
    - POSTGRES_USER=?
    - POSTGRES_PW=?
    - REDIS_HOST=capplan_redis
    - REDIS_PORT=6379
    - REDIS_DB=0
    - MONGO_HOST=capplan_mongo
    - MONGO_PORT=27017
    - MONGO_USER=?
    - MONGO_PASSWORD=?
    - OPENDOTA_API_BASE_URL=https://api.opendota.com/api/
    - FRONTEND_API_QUEUE=consumer_api_queue
    - NUMBER_PROCESSES_WORKER=4
    networks:
      - python_db_network

  capplan_postgres:
    build: ./postgres
    image: capplan_postgres
    container_name: capplan_postgres
    restart: always
    ports:
    - 127.0.0.1:5432:5432
    networks:
    - python_db_network

  capplan_mongo:
    image: mongo
    container_name: capplan_mongo
    restart: always
    ports:
    - 127.0.0.1:27017:27017
    networks:
    - python_db_network

  capplan_redis:
    image: redis:5
    container_name: capplan_redis
    ports:
    - 127.0.0.1:6379:6379
    networks:
    - python_db_network

networks:
  python_db_network: